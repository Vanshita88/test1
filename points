from docx import Document
import re

def count_criteria_points(file_path):
    doc = Document(file_path)
    
    result = {
        "Inclusion Criteria": {"total_points": 0, "points": []},
        "Exclusion Criteria": {"total_points": 0, "points": []}
    }
    
    current_section = None
    current_main_point = None
    
    main_point_pattern = re.compile(r'^(\d+[\.\)]|[A-Z]\))\s+')  # 1., 1), A)
    sub_point_pattern_1 = re.compile(r'^(\d+\.\d+|[a-z]\)|[-•*])\s+')  # 1.1, a), -, •
    sub_point_pattern_2 = re.compile(r'^(\d+\.\d+\.\d+|[ivxlcdm]+\))\s+')  # 1.1.1, i), ii)
    sub_point_pattern_3 = re.compile(r'^(\d+\.\d+\.\d+|\([ivxlcdm]+\)|[a-z]+\.\d+|[*•-])\s+')  

    for para in doc.paragraphs:
        text = para.text.strip()
        print(f"Processing: {text}")  # Debug
        
        if re.match(r'^Inclusion\s+Criteria$', text, re.IGNORECASE):
            print("Switching to Inclusion Criteria")  # Debug
            current_section = "Inclusion Criteria"
            continue
            
        if re.match(r'^Exclusion\s+Criteria$', text, re.IGNORECASE):
            print("Switching to Exclusion Criteria")  # Debug
            current_section = "Exclusion Criteria"
            continue
            
        if current_section:
            main_match = main_point_pattern.match(text)
            if main_match:
                print(f"New main point in {current_section}: {text}")  # Debug
                current_main_point = {"Point_number": result[current_section]["total_points"] + 1, "subpoints_count": 0, "sub_subpoints_count": 0, "sub_sub_subpoints_count": 0}
                result[current_section]["points"].append(current_main_point)
                result[current_section]["total_points"] += 1
                continue
                
            sub_match_1 = sub_point_pattern_1.match(text)
            if sub_match_1 and current_main_point:
                print(f"New subpoint under {current_section} - Point {current_main_point['Point_number']}")  # Debug
                current_main_point["subpoints_count"] += 1
                continue
                
            sub_match_2 = sub_point_pattern_2.match(text)
            if sub_match_2 and current_main_point:
                print(f"New sub-subpoint under {current_section} - Point {current_main_point['Point_number']}")  # Debug
                current_main_point["sub_subpoints_count"] += 1
                continue
                
            sub_match_3 = sub_point_pattern_3.match(text)
            if sub_match_3 and current_main_point:
              print(f"New sub-sub-subpoint under {current_section} - Point {current_main_point['Point_number']}")  # Debug
              current_main_point["sub_sub_subpoints_count"] += 1
                          
    return result
