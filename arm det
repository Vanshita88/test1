def TableExtractor(file_path):
    try:
        doc = docx.Document(file_path)
    except Exception as e:
        print(f"Error reading the file: {e}")
        return {}

    table_label_pattern = re.compile(
        r"(?:Table\s+[\dA-Za-z]+:\s*)?Description\s+of\s+(?:Study\s+Arms|Interventions|Treatment)(?:\s+.+)?",
        re.IGNORECASE
    )

    extracted_tables = {}
    paragraphs = doc.paragraphs
    tables = iter(doc.tables)  # Use iterator to extract tables sequentially

    for i, para in enumerate(paragraphs):
        if table_label_pattern.search(para.text):  # If heading matches regex
            table_name = para.text.strip()
            print(f"Found matching heading: {table_name} at paragraph {i}")

            try:
                table = next(tables)  # Extract the next available table
                print(f"Extracting table for: {table_name}")

                headers = [cell.text.strip() for cell in table.rows[0].cells]  # Extract headers
                print(f"Table Headers: {headers}")

                data = []
                for row in table.rows[1:]:  # Skip header row
                    row_data = {headers[j]: row.cells[j].text.strip() for j in range(len(headers))}
                    data.append(row_data)

                extracted_tables[table_name] = data
            except StopIteration:
                print(f"No table found after {table_name}")

    return extracted_tables
