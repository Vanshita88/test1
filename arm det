import re
import json
from docx import Document

def TableExtractor(file_path):
    try:
        table_label_pattern = re.compile(
            r"(?:Table\s+[\dA-Za-z]+:\s*)?Description\s+of\s+(?:Study\s+Arms|Interventions|Treatment)(?:\s+.+)?",
            re.IGNORECASE
        )
        
        print(f"\nProcessing file: {file_path}")
        doc = Document(file_path)
        
        # Create ordered list of all document elements
        all_elements = []
        for paragraph in doc.paragraphs:
            all_elements.append(('paragraph', paragraph))
        for table in doc.tables:
            all_elements.append(('table', table))
        
        for i, (elem_type, element) in enumerate(all_elements):
            if elem_type == 'paragraph' and table_label_pattern.search(element.text):
                print(f"\nFound target heading at position {i}: {element.text[:100]}...")
                
                # Search for the next 10 elements after heading
                for j in range(i+1, min(i+10, len(all_elements))):
                    next_type, next_elem = all_elements[j]
                    
                    if next_type == 'table':
                        print(f"\nExtracting table at position {j} after heading")
                        table_data = []
                        for row in next_elem.rows:
                            row_data = [cell.text.strip() for cell in row.cells]
                            table_data.append(row_data)
                        return table_data
                    elif next_type == 'paragraph' and next_elem.text.strip():
                        print(f"Skipping paragraph at {j}: {next_elem.text[:50]}...")
                
        print("\nWarning: No matching table found after heading")
        return None
        
    except Exception as e:
        print(f"\nError in TableExtractor: {str(e)}")
        return None
