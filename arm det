import re
from docx import Document

def ArmCohortTableExtractor(file_path):
    """
    Extracts a table from a Word document that contains a label matching:
    'Description of Intervention' or 'Description of Treatment'
    The table's content is returned as a list of rows, with each row being a list of cell texts.
    """
    # Open the document
    doc = Document(file_path)
    
    # Define regex pattern to match the table label
    table_label_pattern = re.compile(    r"(?:Table\s+[\dA-Za-z]+:\s*)?Description\s+of\s+(?:Study\s+Arms|Interventions|Treatment)(?:\s+.+)?",

, re.IGNORECASE)
    
    target_table = None
    # Iterate over all tables in the document
    for table in doc.tables:
        found = False
        # Check each cell for the matching label
        for row in table.rows:
            for cell in row.cells:
                if table_label_pattern.search(cell.text):
                    found = True
                    break
            if found:
                break
        if found:
            target_table = table
            break
    
    if target_table is None:
        print("No matching table found.")
        return None
    
    # Extract table content: each row is a list of cleaned cell texts.
    table_content = []
    for row in target_table.rows:
        row_content = [cell.text.strip() for cell in row.cells]
        table_content.append(row_content)
    
    return table_content

# Example usage:
# file_path = "path_to_your_document.docx"
# table_data = ArmCohortTableExtractor(file_path)
# print(table_data)
