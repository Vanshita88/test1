def AgeExtractor_NER(file_path):
    nlp = spacy.load("en_core_web_sm")  # Load English NLP model
    with open(file_path, 'r', encoding='utf-8') as file:
        text = file.read()

    # Extract content under 'Inclusion criteria'
    inclusion_criteria_match = re.search(r'(?<=Inclusion criteria)(.*?)(?=Exclusion criteria|\Z)', text, re.DOTALL | re.IGNORECASE)
    if not inclusion_criteria_match:
        return None, None
    inclusion_text = inclusion_criteria_match.group(0)

    # Process text with spaCy
    doc = nlp(inclusion_text)
    
    ages = [int(ent.text) for ent in doc.ents if ent.label_ == "AGE"]
    
    if not ages:
        return None, None
    
    return min(ages, default=None), max(ages, default=None)

# Example usage
file_path = "protocol.txt"
min_age, max_age = AgeExtractor_NER(file_path)
print(f"Min Age: {min_age}, Max Age: {max_age}")
